apply plugin: 'com.android.library'

// this module equals to the combination of the following module
// include ':ijkplayer-armv5'
// include ':ijkplayer-x86_64'
// include ':ijkplayer-armv7a'
// include ':ijkplayer-arm64'
// include ':ijkplayer-x86'
// include ':ijkplayer-java'

def safePropGet = { prop, fallback ->
    return project.hasProperty(prop) ? getProperty(prop) : fallback
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    ndkVersion rootProject.ext.ndkVersion

    lintOptions {ndkVersion rootProject.ext.ndkVersion
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion rootProject.ext.targetSdkVersion

        externalNativeBuild {
            def stl = safePropGet("IJK_CXX_STL", "c++_static")
            cmake {
                arguments "-DANDROID_STL=${stl}", "-DANDROID_TOOLCHAIN=clang"
                targets "ijkplayer"
            }
        }
        consumerProguardFiles 'proguard-rules.pro'
        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            abiFilters 'arm64-v8a', 'armeabi-v7a'
//            , 'x86', 'x86_64'

        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.main {
        java.srcDirs = ["$rootProject.rootDir/ijkplayer-java/src/main/java/"]
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
    }

    externalNativeBuild {
        cmake {
            path 'src/main/CMakeLists.txt'
        }
    }


    /*
    flavorDimensions "ndkabi"

    productFlavors {
        armv5 {
            dimension "ndkabi"

        }
        armv7a {
            dimension "ndkabi"

        }
        arm64 {
            dimension "ndkabi"
            // minSdkVersion 21
        }
        x86 {
            dimension "ndkabi"
        }
        x86_64 {
            dimension "ndkabi"
        }
    }
    */
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //testImplementation 'junit:junit:4.12'
    //androidTestImplementation 'com.android.support.test:runner:1.0.2'
    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

apply from: new File(rootProject.projectDir, "tools/gradle-on-demand.gradle");

